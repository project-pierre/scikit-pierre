import unittest

from ....scikit_pierre.measures import vicissitude


class TestVicissitude(unittest.TestCase):

    def test_vicis_wave_hedges(self):
        answer = sum([abs(0.389 - 0.35) / min([0.389, 0.35]), abs(0.5 - 0.563) / min([0.5, 0.563]),
                      abs(0.25 - 0.4) / min([0.25, 0.4]), abs(0.625 - 0.5) / min([0.625, 0.5]),
                      abs(0.00001 - 0.00001) / 0.00001, abs(0.00001 - 0.00001) / 0.00001,
                      abs(0.25 - 0.00001) / min([0.25, 0.00001])])
        self.assertEqual(vicissitude.vicis_wave_hedges(p=[0.389, 0.5, 0.25, 0.625, 0.0, 0.0, 0.25],
                                                       q=[0.35, 0.563, 0.4, 0.5, 0.0, 0.0, 0.0]),
                         answer)

    def test_vicis_symmetric_chi_square(self):
        answer = sum(
            [((0.389 - 0.35) ** 2) / (min([0.389, 0.35])) ** 2, ((0.5 - 0.563) ** 2) / (min([0.5, 0.563]) ** 2),
             ((0.25 - 0.4) ** 2) / (min([0.25, 0.4]) ** 2), ((0.625 - 0.5) ** 2) / (min([0.625, 0.5]) ** 2),
             ((0.00001 - 0.00001) ** 2) / (0.00001 ** 2), ((0.00001 - 0.00001) ** 2) / (0.00001 ** 2),
             ((0.25 - 0.00001) ** 2) / (min([0.25, 0.00001]) ** 2)])
        self.assertEqual(vicissitude.vicis_symmetric_chi_square(p=[0.389, 0.5, 0.25, 0.625, 0.0, 0.0, 0.25],
                                                                q=[0.35, 0.563, 0.4, 0.5, 0.0, 0.0, 0.0]),
                         answer)

    def test_vicis_symmetric_chi_square_emanon3(self):
        answer = sum([((0.389 - 0.35) ** 2) / min([0.389, 0.35]), ((0.5 - 0.563) ** 2) / min([0.5, 0.563]),
                      ((0.25 - 0.4) ** 2) / min([0.25, 0.4]), ((0.625 - 0.5) ** 2) / min([0.625, 0.5]),
                      ((0.00001 - 0.00001) ** 2) / 0.00001, ((0.00001 - 0.00001) ** 2) / 0.00001,
                      ((0.25 - 0.00001) ** 2) / min([0.25, 0.00001])])
        self.assertEqual(vicissitude.vicis_symmetric_chi_square_emanon3(p=[0.389, 0.5, 0.25, 0.625, 0.0, 0.0, 0.25],
                                                                        q=[0.35, 0.563, 0.4, 0.5, 0.0, 0.0, 0.0]),
                         answer)

    def test_vicis_symmetric_chi_square_emanon4(self):
        answer = sum([((0.389 - 0.35) ** 2) / max([0.389, 0.35]), ((0.5 - 0.563) ** 2) / max([0.5, 0.563]),
                      ((0.25 - 0.4) ** 2) / max([0.25, 0.4]), ((0.625 - 0.5) ** 2) / max([0.625, 0.5]),
                      ((0.00001 - 0.00001) ** 2) / 0.00001, ((0.00001 - 0.00001) ** 2) / 0.00001,
                      ((0.25 - 0.00001) ** 2) / max([0.25, 0.00001])])
        self.assertEqual(vicissitude.vicis_symmetric_chi_square_emanon4(p=[0.389, 0.5, 0.25, 0.625, 0.0, 0.0, 0.25],
                                                                        q=[0.35, 0.563, 0.4, 0.5, 0.0, 0.0, 0.0]),
                         answer)

    def test_max_symmetric_chi_square_emanon5(self):
        answer_l = sum([((0.389 - 0.35) ** 2) / 0.389, ((0.5 - 0.563) ** 2) / 0.5,
                        ((0.25 - 0.4) ** 2) / 0.25, ((0.625 - 0.5) ** 2) / 0.625,
                        ((0.00001 - 0.00001) ** 2) / 0.00001, ((0.00001 - 0.00001) ** 2) / 0.00001,
                        ((0.25 - 0.00001) ** 2) / 0.2])
        answer_r = sum([((0.389 - 0.35) ** 2) / 0.35, ((0.5 - 0.563) ** 2) / 0.563,
                        ((0.25 - 0.4) ** 2) / 0.4, ((0.625 - 0.5) ** 2) / 0.5,
                        ((0.00001 - 0.00001) ** 2) / 0.00001, ((0.00001 - 0.00001) ** 2) / 0.00001,
                        ((0.25 - 0.00001) ** 2) / 0.00001])
        self.assertEqual(vicissitude.max_symmetric_chi_square_emanon5(p=[0.389, 0.5, 0.25, 0.625, 0.0, 0.0, 0.25],
                                                                      q=[0.35, 0.563, 0.4, 0.5, 0.0, 0.0, 0.0]),
                         max([answer_l, answer_r]))

    def test_min_symmetric_chi_square_emanon6(self):
        answer_l = sum([((0.389 - 0.35) ** 2) / 0.389, ((0.5 - 0.563) ** 2) / 0.5,
                        ((0.25 - 0.4) ** 2) / 0.25, ((0.625 - 0.5) ** 2) / 0.625,
                        ((0.00001 - 0.00001) ** 2) / 0.00001, ((0.00001 - 0.00001) ** 2) / 0.00001,
                        ((0.25 - 0.00001) ** 2) / 0.25])
        answer_r = sum([((0.389 - 0.35) ** 2) / 0.35, ((0.5 - 0.563) ** 2) / 0.563,
                        ((0.25 - 0.4) ** 2) / 0.4, ((0.625 - 0.5) ** 2) / 0.5,
                        ((0.00001 - 0.00001) ** 2) / 0.00001, ((0.00001 - 0.00001) ** 2) / 0.00001,
                        ((0.25 - 0.00001) ** 2) / 0.00001])
        self.assertEqual(vicissitude.min_symmetric_chi_square_emanon6(p=[0.389, 0.5, 0.25, 0.625, 0.0, 0.0, 0.25],
                                                                      q=[0.35, 0.563, 0.4, 0.5, 0.0, 0.0, 0.0]),
                         min([answer_l, answer_r]))
